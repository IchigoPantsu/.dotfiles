###Shougowares
[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'Shougo/vimproc.vim'
build = 'make'

[[plugins]]
repo ='Shougo/defx.nvim'

[[plugins]]
repo = 'kristijanhusak/defx-icons' 
depends = ['defx.vim']

[[plugins]]
repo = 'kristijanhusak/defx-git' 
depends = ['defx.vim']

###よく使われているvimのプラグイン top20
###https://qiita.com/reireias/items/5364dcaada1a5b88a206#1%E4%BD%8D-tpopevim-fugitive

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'airblade/vim-gitgutter'

[[plugins]]
repo = 'w0rp/ale'

[[plugins]]
repo = 'tpope/vim-repeat'

[[plugins]]
repo = 'junegunn/fzf'
build = './install --all'
hook_add = 'set rtp+=/usr/local/opt/fzf'

[[plugins]]
repo = 'junegunn/fzf.vim'
depends = ['fzf']
hook_add = '''
" Mapping selecting mappings
nmap <leader><tab> <plug>(fzf-maps-n)
xmap <leader><tab> <plug>(fzf-maps-x)
omap <leader><tab> <plug>(fzf-maps-o)

" Insert mode completion
imap <c-x><c-k> <plug>(fzf-complete-word)
imap <c-x><c-f> <plug>(fzf-complete-path)
imap <c-x><c-j> <plug>(fzf-complete-file-ag)
imap <c-x><c-l> <plug>(fzf-complete-line)

" Path completion with custom source command
""inoremap <expr> <c-x><c-f> fzf#vim#complete#path('fd')
""inoremap <expr> <c-x><c-f> fzf#vim#complete#path('rg --files')

" Word completion with custom spec with popup layout option
inoremap <expr> <c-x><c-k> fzf#vim#complete#word({'window': { 'width': 0.2, 'height': 0.9, 'xoffset': 1 }})

" Replace the default dictionary completion with fzf-based fuzzy completion
inoremap <expr> <c-x><c-k> fzf#vim#complete('cat /usr/share/dict/words')

" Global line completion (not just open buffers. ripgrep required.)
inoremap <expr> <c-x><c-l> fzf#vim#complete(fzf#wrap({
  \ 'prefix': '^.*$',
  \ 'source': 'rg -n ^ --color always',
  \ 'options': '--ansi --delimiter : --nth 3..',
  \ 'reducer': { lines -> join(split(lines[0], ':\zs')[2:], '') }}))

"function! s:make_sentence(lines)
"  return substitute(join(a:lines), '^.', '\=toupper(submatch(0))', '').'.'
"endfunction

"" inoremap <expr> <c-x><c-s> fzf#vim#complete({
"  \ 'source':  'cat /usr/share/dict/words',
"  \ 'reducer': function('<sid>make_sentence'),
"  \ 'options': '--multi --reverse --margin 15%,0',
"  \ 'left':    20})

" fzfによるCUI生活の改善
" https://blog.nijohando.jp/post/fzf-fish-vim/
nnoremap [Fzf] <Nop>
nmap <Leader>f [Fzf]
nnoremap [Fzf]f :<C-u>Files<CR>
nnoremap [Fzf]g :<C-u>GFiles<CR>
nnoremap [Fzf]G :<C-u>GFiles?<CR>
nnoremap [Fzf]b :<C-u>Buffers<CR>
'''

[[plugins]]
repo = 'vim-airline/vim-airline'

[[plugins]]
repo = 'vim-airline/vim-airline-themes'
depends = ['vim-airline']

[[plugins]]
repo = 'sheerun/vim-polyglot'

#[[plugins]]
#repo = 'SirVer/ultisnips'

[[plugins]]
repo = 'jiangmiao/auto-pairs'

###オレ的vimプラグイン10選
###https://qiita.com/reireias/items/beaa3bb0e299ae934217

[[plugins]]
repo = 'dhruvasagar/vim-table-mode'

[[plugins]]
repo = 'ryanoasis/vim-devicons'

[[plugins]]
repo = 'thinca/vim-quickrun'

[[plufins]]
repo = 'mattn/sonictemplate-vim'

###おすすめプラグイン 〜 Vimはいいぞ！ゴリラと学ぶVim講座(7)
###https://knowledge.sakura.ad.jp/23248/

[[plugins]]
repo = 'previm/previm'

[[plugins]]
repo = 'vim-jp/vimdoc-ja'

[[plugins]]
repo = 'markonm/traces.vim'

[[plugins]]
repo = 'skanehira/translate.vim'

###
[[plugin]]
repo = '/tomasr/molokai'
hook_add = '''
  syntax on
  colorscheme molokai
  set t_Co=256
'''

[[plugins]]
repo = 'terryma/vim-expand-region'
